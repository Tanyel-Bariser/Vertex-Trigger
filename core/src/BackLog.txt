Order of things to do:
1. Shield affected by magnet
2. Create on/off switch for magnetic field
3. Paper design of level
4. Refactor Asset manager and get more atlases by this point
5. Build design of level
6. Main screen
7. Refactor everything
8. Get good art/music
9. Build more levels

Defects:
� [mobile] Needs performance testing, i.e. log GC cycles. Sometimes game simulation stops, we think it's due to excessive asset load - Cache everything, especially sprites upfront so not garbage
� [mobile] Zoom needs adjusting because the bee is often not in view due to the screen being rectangular and not square like the desktop version

Assets:
� Sprite for magnet
� Bee shoot sound

Game:
� Shield should be affected by magnet
� Magnet should have a switch which toggles it active/inactive
� Implement bullet ricochet sound

Code Quality:
� Rationalize/refactor Assets.java and remove string literals and stop loading all skins every level e.g. UI stuff

R and D:
� Particle explosions

GAME DESIGN EXPLORATION:
	What if we created a flying monster that shot metal spiked balls, which also bounce off of platforms and
go through portals in the same way the players bullets do. This will make the game play sort of like the Atari
Breakout game where the player has to work out exactly where the metal spiked balls would land after bouncing
and teleporting around in order to avoid them. In addition we could have magnets in these levels which pull on
the metal spiked balls so they curve.
	To make this more interesting we could allow the player to choose whether or not to pick up a metallic,
bubble like, shield which on the one hand would guard him from the metallic spiked balls, but on the other
hand cause him to be pulled to-and-fro by the magnets into other potential dangers. This would give the player
an interesting choice to decide whether or not picking up the metallic shield is advantageous for that
particular level.
	This concept could be extended into a main theme of the game where each world, i.e. set of levels, has a
unique power up, each of which has its own combination of pros and cons forcing the player to choose whether
or not it is worth picking up for each particular level.
	Another example that might be worth exploring could be an under water world, where the player starts off
under water in each level and has a limited amount of oxygen, i.e. time, to complete the level and has the choice
to pick up a bubble, which allows him to breathe under water, i.e. have unlimited time, but has the disadvantage
of making him jump extra high in a set of levels with spiked ceilings or be within jumping height of other enemies.
	Fire shield that protects against fire balls but burns platforms the player stands on so they disappear.
	Lever to flood fire level to make it into an under water level.