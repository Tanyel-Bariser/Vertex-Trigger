Plan: Fix all defects and get assets in place first then read the AI manual, then start building first level.

Defects:
� Poker got stuck teleporting back and forth endlessly 17/07/2016, we think due to having two bodies, i.e. head and torso, where each toggles isTeleportable independently
� Player sprite disappears when touching left of screen edge and same with Poker when lies down, probably to do with AbstractGameScreen.isInScreen() method being too constrained
� Poker doesn't die when shot and has no sprite
� Sometimes game simulation stops, we think it's due to excessive asset load

Assets:
� Sprite for flying metal spiked ball and a monster that shoots it, i.e. perhaps robot bee
� Sprite for magnet
� Sprite for metallic shield

Game:
� Restore Poker to normal and make FlyingBee or similar enemy (Keep FlyingBee from flying below a set height and have it shoot at player)
� Flying monster with predefined path
� Flying monster shoot metal bullets
� Magnets pull on metal bullets
� Make magnets level as prototype

Code Quality:
� Think about putting shared code into an AbstractEntity class

R and D:
� Steering behaviours @ https://github.com/libgdx/gdx-ai/wiki/Steering-Behaviors
� Particle explosions

GAME DESIGN EXPLORATION:
	What if we created a flying monster that shot metal spiked balls, which also bounce off of platforms and
go through portals in the same way the players bullets do. This will make the game play sort of like the Atari
Breakout game where the player has to work out exactly where the metal spiked balls would land after bouncing
and teleporting around in order to avoid them. In addition we could have magnets in these levels which pull on
the metal spiked balls so they curve.
	To make this more interesting we could allow the player to choose whether or not to pick up a metallic,
bubble like, shield which on the one hand would guard him from the metallic spiked balls, but on the other
hand cause him to be pulled to-and-fro by the magnets into other potential dangers. This would give the player
an interesting choice to decide whether or not picking up the metallic shield is advantageous for that
particular level.
	This concept could be extended into a main theme of the game where each world, i.e. set of levels, has a
unique power up, each of which has its own combination of pros and cons forcing the player to choose whether
or not it is worth picking up for each particular level.
	Another example that might be worth exploring could be an under water world, where the player starts off
under water in each level and has a limited amount of oxygen, i.e. time, to complete the level and has the choice
to pick up a bubble, which allows him to breathe under water, i.e. have unlimited time, but has the disadvantage
of making him jump extra high in a set of levels with spiked ceilings or be within jumping height of other enemies.
	Fire shield that protects against fire balls but burns platforms the player stands on so they disappear.
	Lever to flood fire level to make it into an under water level.